<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WildPointer</title>
    <link>https://ywangd.github.io/</link>
    <description>Recent content on WildPointer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Mar 2020 23:54:26 +1100</lastBuildDate>
    
	<atom:link href="https://ywangd.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Understanding the Synod Protocol and Its Proof</title>
      <link>https://ywangd.github.io/posts/paxos-synod/</link>
      <pubDate>Wed, 11 Mar 2020 23:54:26 +1100</pubDate>
      
      <guid>https://ywangd.github.io/posts/paxos-synod/</guid>
      <description>Introduction The Synod protocol is the centre piece of the Paxos algorithm. The protocol itself is not hard to understand but the proof does take some effort to grasp. In this article, I attempt to explain the proof in a more accessible way. As a consequence of trying to dumb it down, my explanation is not going to be as bullet-proof as in the paper. But hopefully it serves as an easier entrance and stepping stone.</description>
    </item>
    
    <item>
      <title>SSL Certificate Revocation Check in Java</title>
      <link>https://ywangd.github.io/posts/crl-check-in-java/</link>
      <pubDate>Mon, 17 Jun 2019 21:31:11 +1000</pubDate>
      
      <guid>https://ywangd.github.io/posts/crl-check-in-java/</guid>
      <description>A SSL certificate can be revoked and becomes invalid before the issued expiration time. A Certificate Authority (CA) can publish a list of revoked certificates (CRL) for clients to download. Java has builtin support for certificate revocation status check. Similar to all other Java security features, the implementation is provider based. The default provider is from the sun package.
Please note that I am aware that OCSP or OCSP stapling should be preferred over CRL.</description>
    </item>
    
    <item>
      <title>Sed &amp; Awk</title>
      <link>https://ywangd.github.io/posts/sed-and-awk/</link>
      <pubDate>Sat, 23 Mar 2019 20:57:02 +1100</pubDate>
      
      <guid>https://ywangd.github.io/posts/sed-and-awk/</guid>
      <description>I have been using both Sed and Awk in its basic forms for quite sometime without study them systematically. So the understandings were always a bit incomplete and hence inconsistent. So after many years of delay, I finally read the classic book of Sed &amp;amp; Awk.
It is a great read for anyone who is interested in the two tools or just good-old Unix quirks. For an example, name of the grep tool is based on the g/re/p command of the classic ed, or how ed, Vi, and Sed are related to each other (hint: they share similar command pattern).</description>
    </item>
    
    <item>
      <title>On Implementing CSRF Protection</title>
      <link>https://ywangd.github.io/posts/on-implementing-csrf-protection/</link>
      <pubDate>Sun, 09 Dec 2018 10:52:34 +1100</pubDate>
      
      <guid>https://ywangd.github.io/posts/on-implementing-csrf-protection/</guid>
      <description>When it comes to web security, the word CSRF always comes into the picture. It stands for Cross-Site Request Forgery. This full name is actually quite literal:
 It is a HTTP request - attack happens on the client side, i.e. within user&amp;rsquo;s browser. Hence it must obey browser rules. Programmatic interaction with a server is out of scope. It is a Forgery - the request is crafted by an attacker but sent by a legit user without being aware of it.</description>
    </item>
    
    <item>
      <title>Learning and Blogging</title>
      <link>https://ywangd.github.io/posts/learning-and-blogging/</link>
      <pubDate>Sat, 08 Dec 2018 20:55:52 +1100</pubDate>
      
      <guid>https://ywangd.github.io/posts/learning-and-blogging/</guid>
      <description>The best way to learn is to teach. The second best is to write or in the days of internet, blogging. Learning is for lifetime. In the process, it is important to spend time to reconcile and re-organise so that scattered pieces of learnings can be connected to form actual expertise. This process is in line with the DIKW Pyramid.
I read a lot but forget even more. I have had the idea of documenting my readings or other form of learnings for years.</description>
    </item>
    
  </channel>
</rss>